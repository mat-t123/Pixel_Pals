{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JARir\\\\Desktop\\\\Pixel_Pals\\\\Pixel_Pals\\\\frontend\\\\src\\\\App.js\";\n//import react\nimport React from 'react'; //import built components to render within the app\n\nimport MainSearch from './MainSearch';\nimport CardDisplay from './CardDisplay';\nimport Nav from './Nav'; //import css framework 'Bulma'\n\nimport 'bulma/css/bulma.css'; //add react component to allow the switching between pages within the app\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //initial state\n\n    this.state = {\n      cardName: \"hey\"\n    };\n    this.setCard = this.setCard.bind(this);\n  }\n\n  setCard(card) {\n    return () => {\n      this.setState({\n        cardName: card\n      });\n      console.log(card);\n    };\n  } // YOU FIGURED OUT HOW TO PASS A PROP THROUGH THE ROUTING, NOW JUST FIGURE OUT HOW TO MAKE IT A CALLBACK FUNCTION SO YOU CAN STORE IT\n  // IN THE APP COMPONENT AND THEN PASS IT TO THE DISPLAY CARD COMPONENT TO FINALLY RENDER THE DATA\n  //render function from react, written in JSX\n  //the router component lists the components in the directory so that the can referenced by other components\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(MainSearch, {\n        onMainSearch: this.setCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cardDisplay\",\n      render: () => React.createElement(CardDisplay, {\n        card: this.state.cardName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/JARir/Desktop/Pixel_Pals/Pixel_Pals/frontend/src/App.js"],"names":["React","MainSearch","CardDisplay","Nav","BrowserRouter","Router","Switch","Route","App","Component","constructor","props","state","cardName","setCard","bind","card","setState","console","log","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,OAAO,qBAAP,C,CAEA;;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD;;AAGA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAiC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN,EADgB,CAGhB;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDD,EAAAA,OAAO,CAACE,IAAD,EAAM;AACX,WAAO,MAAM;AACX,WAAKC,QAAL,CAAc;AACZJ,QAAAA,QAAQ,EAAEG;AADE,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KALD;AAMD,GApB8B,CAuB/B;AACA;AACA;AACA;;;AACAI,EAAAA,MAAM,GACN;AACE,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AACE,MAAA,MAAM,EAAI,MAAM,oBAAC,UAAD;AAAY,QAAA,YAAY,EAAE,KAAKN,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AACE,MAAA,MAAM,EAAI,MAAM,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CAFF,CADA,CADF;AAqBD;;AAlD8B;;AAqDjC,eAAeL,GAAf","sourcesContent":["//import react\r\nimport React from 'react';\r\n\r\n//import built components to render within the app\r\nimport MainSearch  from './MainSearch';\r\nimport CardDisplay from './CardDisplay';\r\nimport Nav from './Nav';\r\n//import css framework 'Bulma'\r\nimport 'bulma/css/bulma.css'\r\n\r\n//add react component to allow the switching between pages within the app\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    //initial state\r\n    this.state = {\r\n        cardName: \"hey\"\r\n    };\r\n\r\n    this.setCard = this.setCard.bind(this);\r\n  } \r\n\r\n  setCard(card){\r\n    return () => {\r\n      this.setState({\r\n        cardName: card\r\n      });\r\n      console.log(card);\r\n    }\r\n  }\r\n\r\n\r\n  // YOU FIGURED OUT HOW TO PASS A PROP THROUGH THE ROUTING, NOW JUST FIGURE OUT HOW TO MAKE IT A CALLBACK FUNCTION SO YOU CAN STORE IT\r\n  // IN THE APP COMPONENT AND THEN PASS IT TO THE DISPLAY CARD COMPONENT TO FINALLY RENDER THE DATA\r\n  //render function from react, written in JSX\r\n  //the router component lists the components in the directory so that the can referenced by other components\r\n  render() \r\n  {\r\n    return (  \r\n      <Router> \r\n      <div className =\"App\">\r\n        <Nav />\r\n        <section className=\"section\">\r\n          <Switch>\r\n\r\n            <Route exact path=\"/\" \r\n              render = {() => <MainSearch onMainSearch={this.setCard} />}\r\n            />\r\n\r\n            <Route path=\"/cardDisplay\" \r\n              render = {() => <CardDisplay card={this.state.cardName} />}\r\n            /> \r\n\r\n          </Switch> \r\n        </section>\r\n      </div>\r\n    </Router>  \r\n\r\n    );\r\n  }\r\n}     \r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}